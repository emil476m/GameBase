name: auto-deploy-docker-images
on:
  push:
    branches:
      - main

jobs:
  delivery:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate results of code analysis
          
      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with: 
          bump_each_commit: true
      
      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Build docker image (frontend)    
      - name: Build and Push Docker image (web)
        run: |
            docker build \
            -t ghcr.io/emil476m/gamebase-web:version-0 \
            -f ./Apps/frontend/Dockerfile \
           .
         docker push ghcr.io/emil476m/gamebase-web --all-tags

      # Build the Docker image for gateway
      - name: Build and Push Docker image (gateway)
        run: |
          docker build \
            -t ghcr.io/emil476m/gamebase-gw:version-0 \
            -f ./Apps/gateway/Dockerfile \
            .
          docker push ghcr.io/emil476m/gamebase-gw --all-tags

      # Build the Docker image for CreateService
      - name: Build and Push Docker image (CreateService)
        run: |
          docker build \
            -t ghcr.io/emil476m/gamebase-cs:version-0 \
            -f ./Apps/CreateService/Dockerfile \
            .
          docker push ghcr.io/emil476m/gamebase-cs --all-tags
          
      # Build the Docker image for AI descriptor service
      - name: Build and Push Docker image (AI descriptor)
        run: |
          docker build \
            -t ghcr.io/emil476m/gamebase-ad:version-0 \
            -f ./Apps/AiDescriptor/Dockerfile \
            .
          docker push ghcr.io/emil476m/gamebase-ad --all-tags
          
      # Build the Docker image for SearchEngine
      - name: Build and Push Docker image (SearchEngine)
        run: |
          docker build \
            -t ghcr.io/emil476m/gamebase-se:version-0 \
            -f ./Apps/SearchEngine/Dockerfile \
            .
          docker push ghcr.io/emil476m/gamebase-se --all-tags


      # Build the Docker image for reviewHandler
      - name: Build and Push Docker image (reviewHandler)
        run: |
          docker build \
            -t ghcr.io/emil476m/gamebase-rh:version-0 \
            -f ./Apps/reviewHandler/Dockerfile \
            .
          docker push ghcr.io/emil476m/gamebase-rh --all-tags
      
      - name: Build and Push Docker compose_live
        run: |
          export NEW_VERSION=${{ steps.semver-app.outputs.version }}
          
          docker compose -f docker-compose.yml -f compose-live.yml build
          docker compose -f docker-compose.yml -f compose-live.yml push
      
      - name: deliver to server
        uses: appleboy/scp-action@v0.1.7
        with: 
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.RSA_KEY }}
          source: "*"
          target: hh/
          rm: true
      
      - name: update server
        uses: appleboy/ssh-action@v1.2.1
        env:
          NEW_VERSION: ${{ steps.semver-app.outputs.version }}
          ASPNETCORE_ENVIRONMENT: ${{ secrets.ASPNETCORE_ENVIRONMENT }}
          PGCONN: ${{ secrets.PGCONN }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          FEATUREHUB_TOKEN: ${{ secrets.FEATUREHUB_TOKEN }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
          VPS_IP: ${{ secrets.VPS_IP }}
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.RSA_KEY }}
          envs: ASPNETCORE_ENVIRONMENT,POSTGRES_DB,POSTGRES_PASSWORD,POSTGRES_USER,FEATUREHUB_TOKEN,GOOGLE_AI_API_KEY,NEW_VERSION,PGCONN,VPS_IP
          script: |
            cd hh
            docker compose down
            docker compose pull
            docker compose -f compose-live.yml up --build -d
