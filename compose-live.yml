services:
  database:
    image: postgres
    command: -c 'max_connections=100'
    restart: always
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    volumes:
      - pgdatagamebase:/var/lib/postgresql/data
      - ./scripts/sql:/scripts/sql #Maops sql folder
      - ./scripts/shell/sql-set-up.sh:/docker-entrypoint-initdb.d/sql-set-up.sh #runs initialisation scrips if  database doss sent exist
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - game_base_network

  featurehub:
    image: featurehub/party-server:latest
    restart: always
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    ports:
      - target: 8085
        published: 4085
        mode: host
    volumes:
      - featurehub-h2-data:/db
    networks:
      - game_base_network
        
  gateway:
    image: ghcr.io/emil476m/gamebase-gw:latest
    restart: always
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    ports:
      - target: 8080
        published: 8080
        mode: host
    networks:
    - game_base_network
  
  searchengine:
    image: ghcr.io/emil476m/gamebase-se:latest
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8000
      - pgconn=${pgconn}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    networks:
      - game_base_network
  
  createservice:
    image: ghcr.io/emil476m/gamebase-cs:latest
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:6000
      - pgconn=${pgconn}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    networks:
      - game_base_network
  
  reviewhandler:
    image: ghcr.io/emil476m/gamebase-rh:latest
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8000
      - pgconn=${pgconn}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 4
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    networks:
      - game_base_network

volumes:
  pgdatagamebase:
  featurehub-h2-data:

networks:
  game_base_network:
    driver: overlay