services:
  database:
    image: postgres
    command: -c 'max_connections=100'
    restart: always
    volumes:
      - pgdatagamebase:/var/lib/postgresql/data
      - ./scripts/sql:/scripts/sql #Maops sql folder
      - ./scripts/shell/sql-set-up.sh:/docker-entrypoint-initdb.d/sql-set-up.sh #runs initialisation scrips if  database doss sent exist
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - game_base_network

  featurehub:
    image: featurehub/party-server:latest
    restart: always
    ports:
      - 4085:8085
    volumes:
      - featurehub-h2-data:/db
    networks:
      - game_base_network
        
  gateway:
    image: ghcr.io/emil476m/gamebase-gw:${NEW_VERSION}
    restart: always
    ports:
      - 8080:8080
    environment:
      - VPS_IP= ${VPS_IP}
    networks:
    - game_base_network
  
  searchengine:
    image: ghcr.io/emil476m/gamebase-se:${NEW_VERSION}
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8000
      - pgconn=${PGCONN}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - game_base_network
  
  createservice:
    image: ghcr.io/emil476m/gamebase-cs:${NEW_VERSION}
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:6000
      - pgconn=${PGCONN}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 2
    networks:
      - game_base_network
  
  reviewhandler:
    image: ghcr.io/emil476m/gamebase-rh:${NEW_VERSION}
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8000
      - pgconn=${PGCONN}
    depends_on:
      - database
      - gateway
    deploy:
      mode: replicated
      replicas: 4
    networks:
      - game_base_network

  aidescriptionservice:
    restart: always
    image: ghcr.io/emil476m/gamebase-ad:${NEW_VERSION}
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - FEATUREHUB_TOKEN=${FEATUREHUB_TOKEN}
    networks:
      - game_base_network
  gamebasefrontend:
    image: ghcr.io/emil476m/gamebase-web:${NEW_VERSION}
    ports:
      - 80:4200
    networks:
      - game_base_network

volumes:
  pgdatagamebase:
  featurehub-h2-data:

networks:
  game_base_network:
    driver: bridge